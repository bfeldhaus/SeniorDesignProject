using System;
using OtpNet;        // Install-Package Otp.NET
using QRCoder;       // Install-Package QRCoder
using System.Drawing;

class Program
{
    // Registration (one-time setup)
    static string RegisterUser(string email)
    {
        // Step 1: Generate secret key (store this in DB for the user)
        var secretKey = KeyGeneration.GenerateRandomKey(20); 
        var base32Secret = Base32Encoding.ToString(secretKey);
        Console.WriteLine("User's secret key (store securely): " + base32Secret);

        // Step 2: Generate provisioning URI (for Google Authenticator)
        var totp = new Totp(secretKey);
        string issuer = "MyApp";
        string uri = $"otpauth://totp/{issuer}:{email}?secret={base32Secret}&issuer={issuer}&algorithm=SHA1&digits=6&period=30";

        // Step 3: Generate QR code
        var qrGen = new QRCodeGenerator();
        var qrData = qrGen.CreateQrCode(uri, QRCodeGenerator.ECCLevel.Q);
        var qrCode = new QRCode(qrData);
        using (Bitmap qrImage = qrCode.GetGraphic(20))
        {
            qrImage.Save($"{email}_qrcode.png");
            Console.WriteLine($"Scan {email}_qrcode.png with Google Authenticator.");
        }

        return base32Secret; // Store securely in DB
    }

    // Login (verification)
    static void Login(string email, string storedSecret)
    {
        var secretKey = Base32Encoding.ToBytes(storedSecret);
        var totp = new Totp(secretKey);

        Console.Write("Enter the 6-digit code: ");
        string userInput = Console.ReadLine();

        bool valid = totp.VerifyTotp(userInput, out long timeStepMatched, VerificationWindow.RfcSpecifiedNetworkDelay);
        if (valid)
        {
            Console.WriteLine("Login success (2FA passed)");
        }
        else
        {
            Console.WriteLine("Invalid code, login denied");
        }
    }

    static void Main()
    {
        // Registration (one-time, then store secret in DB)
        string storedSecret = RegisterUser("user@example.com");

        // Login (use stored secret from DB)
        Login("user@example.com", storedSecret);
    }
}
